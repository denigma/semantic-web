// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Denigma.Control = (function(_super) {
    __extends(Control, _super);

    function Control(selector, element, subclass) {
      this.selector = selector;
      this.element = element;
      this.subclass = subclass;
      /*
        jquery-like selector string is passed,
        something like '#lifespan'
      */

      this.node = d3.select(this.selector);
    }

    Control.prototype.enter = function(data) {
      return this.select(data).enter();
    };

    Control.prototype.exit = function(data) {
      return this.select(data).exit().remove();
    };

    Control.prototype.select = function(data) {
      return this.node.selectAll("" + this.element + "." + this.subclass).data(data);
    };

    Control.prototype.append = function(novel) {
      error("append is not implemented");
      return novel;
    };

    Control.prototype.draw = function(data) {
      var novel, sel;
      sel = this.select(data);
      this.hide(sel.exit());
      novel = this.append(sel.enter());
      return this.update(sel);
    };

    Control.prototype.hide = function(sel) {
      return sel.remove();
    };

    Control.prototype.update = function(sel) {
      return error("update is not implemented");
    };

    return Control;

  })(Denigma.BasicView);

}).call(this);

/*
//@ sourceMappingURL=control.map
*/
