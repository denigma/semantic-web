// Generated by CoffeeScript 1.6.3
/*
  Here is where the main code of the demo is
*/


(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Denigma.LifeSpan = (function(_super) {
    __extends(LifeSpan, _super);

    function LifeSpan() {
      _ref = LifeSpan.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    LifeSpan.prototype.fixture = void 0;

    LifeSpan.prototype.barcharts = void 0;

    LifeSpan.w = 1024;

    LifeSpan.h = 640;

    LifeSpan.main = function() {
      var dur, marginX, rowHeight, rowMargin;
      this.fixture = new Denigma.Fixture();
      this.poser = new Denigma.RowPoser(rowMargin = 20, rowHeight = 56, marginX = 10, dur = 2000);
      this.barcharts = new Denigma.BarCharts("#lifespanbars", "row", this.poser);
      this.curves = new Denigma.Curves("#lifespancurves", "curve", this.poser);
      this.positionBars();
      this.positionCurves();
      return this.generate();
    };

    LifeSpan.positionBars = function() {
      this.barcharts.svg.attr("class", "chart");
      return this.barcharts.setSize(this.w, this.h);
    };

    LifeSpan.generate = function() {
      var data, num;
      num = this.fixture.rand(2, 5);
      data = this.fixture.generate(num);
      this.curves.draw(data);
      return this.barcharts.draw(data);
    };

    LifeSpan.positionCurves = function() {
      this.curves.svg.attr("class", "chart");
      return this.curves.setSize(this.w, this.h);
    };

    /*
    @generateCurves: =>
      num =  @fixture.rand(2,5)
      groups = @fixture.generateCurves(num)
      @curves.draw(groups)
    */


    return LifeSpan;

  })(Batman.Object);

  Denigma.on("start", function() {
    /*
      Event to initiate the main app
    */

    return Denigma.LifeSpan.main();
  });

}).call(this);

/*
//@ sourceMappingURL=lifespan.map
*/
