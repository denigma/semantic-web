// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Denigma.ExperimentBar = (function(_super) {
    __extends(ExperimentBar, _super);

    /*
      creates a bar for interventions
    */


    ExperimentBar.prototype.scale = void 0;

    function ExperimentBar(poser, group, minW, minH) {
      this.group = group;
      this.minW = minW;
      this.minH = minH;
      ExperimentBar.__super__.constructor.call(this, poser);
    }

    ExperimentBar.prototype.append = function(row) {
      var bars;
      bars = row.append("svg");
      bars.attr("class", this.group);
      bars.append("rect").attr("class", "max");
      bars.append("rect").attr("class", "mean");
      bars.append("rect").attr("class", "min");
      return bars;
    };

    ExperimentBar.prototype.updateBar = function(sel, key, h) {
      var bar, fun, posY,
        _this = this;
      if (h == null) {
        h = this.minH;
      }
      posY = this.poser.getMiddlePos(h);
      fun = function(d) {
        return _this.scale(d[_this.group].get(key));
      };
      bar = this.select(sel, key, "rect");
      bar.attr("x", this.poser.marginX).attr("y", posY).attr("width", this.minW).attr("height", h);
      return bar.transition().duration(this.poser.dur).attr("width", fun).attr("rx", 3).attr("ry", 3);
    };

    ExperimentBar.prototype.select = function(sel, key, cl) {
      if (cl == null) {
        cl = "rect";
      }
      return sel.select("." + this.group + " " + cl + "." + key);
    };

    ExperimentBar.prototype.update = function(sel) {
      var h;
      h = this.minH;
      this.updateBar(sel, "min", h);
      this.updateBar(sel, "mean", h);
      this.updateBar(sel, "max", h);
      return sel;
    };

    return ExperimentBar;

  })(Denigma.BasicView);

}).call(this);

/*
//@ sourceMappingURL=experiment_bar.map
*/
