// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Denigma.IconView = (function(_super) {
    __extends(IconView, _super);

    /*
      this icon view that draws icons
    */


    IconView.prototype.resources = "";

    function IconView(poser, resources) {
      this.resources = resources != null ? resources : "";
      this.getManipulationPic = __bind(this.getManipulationPic, this);
      this.getAnimalPic = __bind(this.getAnimalPic, this);
      IconView.__super__.constructor.call(this, poser);
    }

    IconView.prototype.addIcons = function(icons) {
      /*
        this function add all icons to the rowumn and groups them inside svg
      */

      icons.append("rect").attr("class", "billet");
      icons.append("image").attr("class", "species").attr("x", 0);
      icons.append("image").attr("class", "manipulation").attr("x", 0);
      return icons.append("text").attr("class", "label").text("species").attr("x", 0).attr("font-size", "16pt");
    };

    IconView.prototype.getAnimalPic = function(d) {
      return "" + this.resources + "/" + d.species.icon;
    };

    IconView.prototype.getManipulationPic = function(d) {
      return "" + this.resources + "/" + d.manipulation.icon;
    };

    IconView.prototype.updateIcons = function(sel) {
      /*
        make all icons drawing and binding routine
      */

      var gma, gpa, gsp, icLen, lw, manLen, manip, posM, txt, width;
      width = sel.attr("width");
      icLen = this.poser.contentHeight();
      manLen = icLen / 2;
      lw = width - icLen - manLen - this.poser.marginX;
      posM = this.poser.getMiddlePos(manLen);
      sel.select("rect.billet").attr("width", width).attr("height", icLen).attr("rx", 10).attr("ry", 10);
      gpa = this.getAnimalPic;
      sel.select("image.species").transition().duration(this.poser.dur).attr("xlink:href", gpa).attr("x", this.poser.marginX).attr("width", icLen).attr("height", icLen);
      gma = this.getManipulationPic;
      manip = sel.select("image.manipulation");
      manip.attr("xlink:href", gma).attr("width", manLen).attr("height", manLen);
      manip.transition().duration(this.poser.dur).attr("x", icLen + lw).attr("y", posM);
      gsp = Denigma.Intervention.getSpeciesName;
      txt = sel.select("text");
      txt.attr("class", "label").attr("width", lw).attr("height", icLen).attr("y", manLen).attr("x", icLen + this.poser.marginX).text(gsp);
      return txt.transition().duration(this.poser.dur).attr("x", icLen + this.poser.marginX * 2).attr("width", lw).attr("height", icLen);
    };

    IconView.prototype.append = function(novel) {
      return this.addIcons(novel);
    };

    IconView.prototype.update = function(sel) {
      return this.updateIcons(sel);
    };

    return IconView;

  })(Denigma.BasicView);

}).call(this);

/*
//@ sourceMappingURL=icon_view.map
*/
