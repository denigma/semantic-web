// Generated by CoffeeScript 1.7.1

/*
   *Denigma chat App#
  Application coffee of the chat
 */

(function() {
  var Denigma, container, fetchHTML2,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Batman.config.minificationErrors = false;

  Denigma = (function(_super) {
    __extends(Denigma, _super);

    function Denigma() {
      return Denigma.__super__.constructor.apply(this, arguments);
    }

    Denigma.route('query/main', 'query#main');

    Denigma.route('schema/sankey', 'schema#sankey');

    Denigma.route('schema/distortion', 'schema#distortion');

    Denigma.host = function() {
      return "http://" + window.location.host + "/";
    };

    Denigma.url = function(str) {
      return Denigma.host() + str;
    };

    Denigma.models = function(str) {
      return Denigma.url("models/" + str);
    };

    Denigma.pages = function(str) {
      return Denigma.url("pages/" + str);
    };

    return Denigma;

  })(Batman.App);

  container = Batman.container;

  container.Denigma = Denigma;

  Batman.config = {
    pathToApp: '/',
    usePushState: true,
    pathToHTML: '',
    fetchRemoteHTML: true,
    cacheViews: false,
    minificationErrors: false,
    protectFromCSRF: false,
    viewExtension: ""
  };

  fetchHTML2 = function(path) {
    return new Batman.Request({
      url: Batman.Navigator.normalizePath(Batman.config.pathToHTML, "" + path),
      type: 'html',
      success: (function(_this) {
        return function(response) {
          return _this.set(path, response);
        };
      })(this),
      error: function(response) {
        throw new Error("Could not load html from " + path);
      }
    });
  };

  Batman.HTMLStore.prototype.fetchHTML = fetchHTML2;

  $.ajaxSetup({
    headers: {
      "X-PJAX": "X-PJAX"
    }
  });

  jQuery(function() {
    Denigma.run();
    return Denigma.fire("start");
  });

}).call(this);

//# sourceMappingURL=denigma.map
